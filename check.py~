# !/usr/bin/python
# -*- coding: utf-8 -*-

import sys
import os
import signal
from time import sleep
from datetime import datetime
from utils import load_config
import RPi.GPIO as GPIO
import bill_acceptor
import buytea

ini = load_config()

price = int(ini.get('main', 'price'))
pin_in = int(ini.get('main', 'pin'))
pin_out_tea = int(ini.get('main', 'pin_out_tea'))
pin_out_delivery = int(ini.get('main', 'pin_out_delivery'))

balance = buytea.MoneyScreen.balance

debug = False


if not debug:
    import RPi.GPIO as GPIO
    GPIO.setmode(GPIO.BCM)
    GPIO.setwarnings(False)
    GPIO.setup(pin_in, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)

def less_price():
    #if price > balance:
    while not GPIO.input(pin_in):
        print(1)

def more_price():
    #if price < balance:
        #delivery = balance - price
    GPIO.setup(pin_out_delivery, GPIO.OUT)
    GPIO.output(pin_out_delivery, True)
    GPIO.output(pin_out_delivery, False)
	#бутылки

def equally_price():
    #elif price == balance:
    GPIO.setup (pin_out_tea, GPIO.OUT)
    GPIO.output (pin_out_tea, True)
    GPIO.output (pin_out_tea, False)
    #сдача

def get_check_debug():
    n = 0
    while True:
        if n > 5:
            m = int(n)
            n = 0
            return m
        sleep(1)
        n += 1

def get_check():
    check = 0
    while True:
        gap = 0
        #while pfd.input_pins[pin_in].value and gap < 7:
        while not GPIO.input(pin_out_delivery) and gap < 7:
            if check:
                gap += 1
            sleep(.01)

        if gap == 7:
            return bill * 10
        check += 1

        while GPIO.input(pin_out_delivery):
        #while pfd.input_pins[pin_in].value:
            sleep(.01)

def main():
    if debug:
        get_check_debug
    elif price > balance:
        less_price()
    elif price < balance:
        more_price()
    else:
        equally_price()



if __name__ == '__main__':
    main()


